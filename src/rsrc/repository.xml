<?xml version="1.0" encoding="UTF-8"?>
<repository>
  <databases>
  <!--  
   attributes: name - the name of the data type
               max-size - the maximum size of the data type: Used in the new data type form. 
                          0 - the size is not supported (defaultly used if the attribute is not present)
                          -1 - the data type is of miscellaneous, size is not supported
                          1 - the size is supported, however not displayed initially
                          >1 - the given size
               default - if the given data type is the defaultly selected for its group. 
                         Defaults to false if not present.
  -->
    <database name="MySql" id="MYSQL" class-uid="{100000DB-0000-0000-0000-000000000001}">
      <datatype-groups>
        <!-- Text types -->
        <datatype-group type="0" name="Text/String" >
          <datatype name="CHAR" max-size="255" />
          <datatype name="VARCHAR" max-size="65535" default="1" />
          <datatype name="TINYTEXT" />
          <datatype name="TEXT" />
          <datatype name="MEDIUMTEXT" />
          <datatype name="LONGTEXT" />
        </datatype-group>
        
        <!-- Numerical types -->
        <datatype-group type="1" name="Numeric">
          <datatype name="INT" max-size="1" default="1" />
          <datatype name="INTEGER" max-size="1" />
          <datatype name="TINYINT" max-size="1" />
          <datatype name="SMALLINT" max-size="1" /> 
          <datatype name="MEDIUMINT" max-size="1" />
          <datatype name="BIGINT" max-size="1" />
          <datatype name="DECIMAL" max-size="1" />
          <datatype name="NUMERIC" max-size="1" />
          <datatype name="FLOAT" max-size="1" />
          <datatype name="REAL" max-size="1" />
          <datatype name="DOUBLE PRECISION" max-size="1" />
          <datatype name="BIT" max-size="64" />
        </datatype-group>
          
        <!-- Boolean types -->
        <datatype-group type="2" name="Boolean">
          <datatype name="BOOL" default="1" />
        </datatype-group>
        
        <!-- Date time types -->
        <datatype-group type="3" name="Date/Time">
          <datatype name="DATE" />
          <datatype name="DATETIME" />
          <datatype name="TIME" />
          <datatype name="TIMESTAMP" default="1" />
          <datatype name="YEAR" />
        </datatype-group>
        
        <!-- Blob types -->
        <datatype-group type="4" name="Blob/Binary">
          <datatype name="BINARY" max-size="65535" />
          <datatype name="BLOB" default="1" />
          <datatype name="TINYBLOB" />
          <datatype name="MEDIUMBLOB" />
          <datatype name="LONGBLOB" />
          <datatype name="VARBINARY" max-size="65535" />
        </datatype-group>
          
        <!-- Miscellaneous types -->
        <datatype-group type="5" name="Misc">
          <datatype name="ENUM" max-size="-1" default="1" />
          <datatype name="SET" max-size="-1" />
        </datatype-group>
          
        <!-- Spatial types -->
        <datatype-group type="6" name="Spatial">
          <datatype name="GEOMETRY" />
          <datatype name="POINT" />
          <datatype name="LINESTRING" />
          <datatype name="POLYGON" />
          <datatype name="MULTIPOLYGON" />
          <datatype name="MULTIPOINT" />
          <datatype name="MULTILINESTRING" />
          <datatype name="GEOMETRYCOLLECTION" />
        </datatype-group>
      </datatype-groups>
      
      <keywords>
        <keyword description="" text= "ADD" />
        <keyword description="" text= "ALL" />
        <keyword description="" text= "ALTER" />
        <keyword description="" text= "ANALYZE" />
        <keyword description="" text= "AND" />
        <keyword description="" text= "AS" />
        <keyword description="" text= "ASC" />
        <keyword description="" text= "ASENSITIVE" />
        <keyword description="" text= "BEFORE"/>
        <keyword description="" text= "BEGIN" />
        <keyword description="" text= "END" />
        <keyword description="" text= "BETWEEN" />
        <keyword description="" text= "BOTH" />
        <keyword description="" text= "BY" />
        <keyword description="" text= "CALL" />
        <keyword description="" text= "CASCADE" />
        <keyword description="" text= "CASE" />
        <keyword description="" text= "CHANGE"/>
        <keyword description="" text= "CHECK" />
        <keyword description="" text= "CHARACTER" />
        <keyword description="" text= "COLLATE" />
        <keyword description="" text= "COLUMN" />
        <keyword description="" text= "CONDITION" />
        <keyword description="" text= "CONSTRAINT" />
        <keyword description="" text= "CONTINUE" />
        <keyword description="" text= "CONVERT"/>
        <keyword description="" text= "CREATE" />
        <keyword description="" text= "CROSS" />
        <keyword description="" text= "CURRENT_DATE" />
        <keyword description="" text= "CURRENT_TIME" />
        <keyword description="" text= "CURRENT_TIMESTAMP" />
        <keyword description="" text= "CURRENT_USER" />
        <keyword description="" text= "CURSOR"/>
        <keyword description="" text= "DATABASE" />
        <keyword description="" text= "DATABASES" />
        <keyword description="" text= "DAY_HOUR" />
        <keyword description="" text= "DAY_MICROSECOND" />
        <keyword description="" text= "DAY_MINUTE" />
        <keyword description="" text= "DAY_SECOND" />
        <keyword description="" text= "DECLARE" />
        <keyword description="" text= "DEFAULT"/>
        <keyword description="" text= "DELAYED" />
        <keyword description="" text= "DELETE" />
        <keyword description="" text= "DELIMITER" role="delimiter"/>
        <keyword description="" text= "DESC" />
        <keyword description="" text= "DESCRIBE" />
        <keyword description="" text= "DETERMINISTIC" />
        <keyword description="" text= "DISTINCT" />
        <keyword description="" text= "DISTINCTROW" />
        <keyword description="" text= "DIV"/>
        <keyword description="" text= "DROP" />
        <keyword description="" text= "DUAL" />
        <keyword description="" text= "EACH" />
        <keyword description="" text= "ELSE" />
        <keyword description="" text= "ELSEIF" />
        <keyword description="" text= "ENCLOSED" />
        <keyword description="" text= "ESCAPED" />
        <keyword description="" text= "EXISTS" />
        <keyword description="" text= "EXIT"/>
        <keyword description="" text= "EXPLAIN" />
        <keyword description="" text= "FALSE" />
        <keyword description="" text= "FETCH" />
        <keyword description="" text= "FOR" />
        <keyword description="" text= "FORCE" />
        <keyword description="" text= "FOREIGN" />
        <keyword description="" text= "FROM" />
        <keyword description="" text= "FULLTEXT" />
        <keyword description="" text= "GRANT"/>
        <keyword description="" text= "GROUP" />
        <keyword description="" text= "HAVING" />
        <keyword description="" text= "HIGH_PRIORITY" />
        <keyword description="" text= "HOUR_MICROSECOND" />
        <keyword description="" text= "HOUR_MINUTE" />
        <keyword description="" text= "HOUR_SECOND" />
        <keyword description="" text= "IF"/>
        <keyword description="" text= "IGNORE" />
        <keyword description="" text= "IN" />
        <keyword description="" text= "INDEX" />
        <keyword description="" text= "INFILE" />
        <keyword description="" text= "INNER" />
        <keyword description="" text= "INOUT" />
        <keyword description="" text= "INSENSITIVE" />
        <keyword description="" text= "INSERT" />
        <keyword description="" text= "INTERVAL"/>
        <keyword description="" text= "INTO" />
        <keyword description="" text= "IS" />
        <keyword description="" text= "ITERATE" />
        <keyword description="" text= "JOIN" />
        <keyword description="" text= "KEY" />
        <keyword description="" text= "KEYS" />
        <keyword description="" text= "KILL" />
        <keyword description="" text= "LEADING" />
        <keyword description="" text= "LEAVE"/>
        <keyword description="" text= "LEFT" />
        <keyword description="" text= "LIKE" />
        <keyword description="" text= "LIMIT" />
        <keyword description="" text= "LINES" />
        <keyword description="" text= "LOAD" />
        <keyword description="" text= "LOCALTIME" />
        <keyword description="" text= "LOCALTIMESTAMP" />
        <keyword description="" text= "LOCK"/>
        <keyword description="" text= "LONG" />
        <keyword description="" text= "LONGBLOB" />
        <keyword description="" text= "LONGTEXT" />
        <keyword description="" text= "LOOP" />
        <keyword description="" text= "LOW_PRIORITY" />
        <keyword description="" text= "MATCH" />
        <keyword description="" text= "MEDIUMBLOB" />
        <keyword description="" text= "MEDIUMINT"/>
        <keyword description="" text= "MEDIUMTEXT" />
        <keyword description="" text= "MIDDLEINT" />
        <keyword description="" text= "MINUTE_MICROSECOND" />
        <keyword description="" text= "MINUTE_SECOND" />
        <keyword description="" text= "MOD" />
        <keyword description="" text= "MODIFIES" />
        <keyword description="" text= "NATURAL" />
        <keyword description="" text= "NOT"/>
        <keyword description="" text= "NO_WRITE_TO_BINLOG" />
        <keyword description="" text= "NULL" />
        <keyword description="" text= "ON" />
        <keyword description="" text= "OPTIMIZE" />
        <keyword description="" text= "OPTION" />
        <keyword description="" text= "OPTIONALLY" />
        <keyword description="" text= "OR" />
        <keyword description="" text= "ORDER"/>
        <keyword description="" text= "OUT" />
        <keyword description="" text= "OUTER" />
        <keyword description="" text= "OUTFILE" />
        <keyword description="" text= "PRECISION" />
        <keyword description="" text= "PRIMARY" />
        <keyword description="" text= "PROCEDURE" />
        <keyword description="" text= "PURGE" />
        <keyword description="" text= "READ" />
        <keyword description="" text= "READS"/>
        <keyword description="" text= "REAL" />
        <keyword description="" text= "REFERENCES" />
        <keyword description="" text= "REGEXP" />
        <keyword description="" text= "RELEASE" />
        <keyword description="" text= "RENAME" />
        <keyword description="" text= "REPEAT" />
        <keyword description="" text= "REPLACE" />
        <keyword description="" text= "REQUIRE" />
        <keyword description="" text= "RESTRICT"/>
        <keyword description="" text= "RETURN" />
        <keyword description="" text= "REVOKE" />
        <keyword description="" text= "RIGHT" />
        <keyword description="" text= "RLIKE" />
        <keyword description="" text= "SCHEMA" />
        <keyword description="" text= "SCHEMAS" />
        <keyword description="" text= "SECOND_MICROSECOND" />
        <keyword description="" text= "SELECT"/>
        <keyword description="" text= "SENSITIVE" />
        <keyword description="" text= "SEPARATOR" />
        <keyword description="" text= "SET" />
        <keyword description="" text= "SHOW" />
        <keyword description="" text= "SONAME" />
        <keyword description="" text= "SPATIAL" />
        <keyword description="" text= "SPECIFIC" />
        <keyword description="" text= "SQL"/>
        <keyword description="" text= "SQLEXCEPTION" />
        <keyword description="" text= "SQLSTATE" />
        <keyword description="" text= "SQLWARNING" />
        <keyword description="" text= "SQL_BIG_RESULT" />
        <keyword description="" text= "SQL_CALC_FOUND_ROWS" />
        <keyword description="" text= "SQL_SMALL_RESULT" />
        <keyword description="" text= "SSL"/>
        <keyword description="" text= "STARTING" />
        <keyword description="" text= "STRAIGHT_JOIN" />
        <keyword description="" text= "TABLE" />
        <keyword description="" text= "TEMPORARY" />
        <keyword description="" text= "TERMINATED" />
        <keyword description="" text= "THEN" />
        <keyword description="" text= "TO" />
        <keyword description="" text= "TRAILING" />
        <keyword description="" text= "TRIGGER"/>
        <keyword description="" text= "TRUE" />
        <keyword description="" text= "UNDO" />
        <keyword description="" text= "UNION" />
        <keyword description="" text= "UNIQUE" />
        <keyword description="" text= "UNLOCK" />
        <keyword description="" text= "UNSIGNED" />
        <keyword description="" text= "UPDATE" />
        <keyword description="" text= "USAGE" />
        <keyword description="" text= "USE" />
        <keyword description="" text= "USING"/>
        <keyword description="" text= "UTC_DATE" />
        <keyword description="" text= "UTC_TIME" />
        <keyword description="" text= "UTC_TIMESTAMP" />
        <keyword description="" text= "VALUES" />
        <keyword description="" text= "VARYING" />
        <keyword description="" text= "WHEN" />
        <keyword description="" text= "WHERE" />
        <keyword description="" text= "WHILE" />
        <keyword description="" text= "WITH"/>
        <keyword description="" text= "WRITE" />
        <keyword description="" text= "XOR" />
        <keyword description="" text= "YEAR_MONTH" />
        <keyword description="" text= "ZEROFILL" />
        <keyword description="" text= "ASENSITIVE" />
        <keyword description="" text= "CONNECTION" />
        <keyword description="" text= "DECLARE" />
        <keyword description="" text= "ELSEIF" />
        <keyword description="" text= "GOTO"/>
        <keyword description="" text= "ITERATE" />
        <keyword description="" text= "LOOP" />
        <keyword description="" text= "READS" />
        <keyword description="" text= "RETURN" />
        <keyword description="" text= "SENSITIVE" />
        <keyword description="" text= "SQLEXCEPTION" />
        <keyword description="" text= "TRIGGER" />
        <keyword description="" text= "WHILE" />
        <keyword description="" text= "CALL"/>
        <keyword description="" text= "CONTINUE" />
        <keyword description="" text= "DETERMINISTIC" />
        <keyword description="" text= "EXIT" />
        <keyword description="" text= "INOUT" />
        <keyword description="" text= "LABEL" />
        <keyword description="" text= "MODIFIES" />
        <keyword description="" text= "RELEASE" />
        <keyword description="" text= "SCHEMA" />
        <keyword description="" text= "SPECIFIC"/>
        <keyword description="" text= "SQLSTATE" />
        <keyword description="" text= "UNDO" />
        <keyword description="" text= "CONDITION" />
        <keyword description="" text= "CURSOR" />
        <keyword description="" text= "EACH" />
        <keyword description="" text= "FETCH" />
        <keyword description="" text= "INSENSITIVE" />
        <keyword description="" text= "LEAVE" />
        <keyword description="" text= "OUT"/>
        <keyword description="" text= "REPEAT" />
        <keyword description="" text= "SCHEMAS" />
        <keyword description="" text= "VIEW" />
        <keyword description="" text= "SORT" />
        <keyword description="" text= "SQL" />
        <keyword description="" text= "SQLWARNING" />
        <keyword description="" text= "UPGRADE" />
        <keyword description="" text= "DELIMITER" />
        <keyword description="" text= "BEGIN" />
        <keyword description="" text= "END" />      
      </keywords>    
      
      <trigger-defs>
        <field role="event" value="INSERT" />
        <field role="event" value="UPDATE" />
        <field role="event" value="DELETE" />
        <field role="time" value="BEFORE" />
        <field role="time" value="AFTER" />
      </trigger-defs>
      
      <spis>
        <!-- The temporary table SPI -->
        <spi class-uid="{10000002-0000-0000-0000-000000000001}" 
             sql-role-uid="{10000004-0000-0000-0000-000000000001}" 
             referred-class-uid="{10000001-0000-0000-0000-000000000001}" 
             name="Temporary"
             gui-text="Temporary table" 
             gui-group="General" 
             default="0" 
             db-major="5" 
             db-minor="0" 
             sql="TEMPORARY">
             <tooltip> <![CDATA[Create a <b>TEMPORARY</b> table.<p> A TEMPORARY table is visible only to the current connection, and is dropped automatically when the connection is closed.]]> </tooltip>
        </spi>
             
        <!-- Create a table only if it does not exist SP -->
        <spi class-uid="{10000002-0000-0000-0000-000000000001}"
             sql-role-uid="{10000004-0000-0000-0000-000000000002}"
             referred-class-uid="{10000001-0000-0000-0000-000000000001}"
             name = "IfNotExists"
             gui-text = "Create only if the table does not exist"
             gui-group="General"
             default="1"
             db-major="5"
             db-minor="0"
             sql="IF NOT EXISTS">
             <tooltip>
             <![CDATA[Specify the <b>IF NOT EXISTS</b> option.<p> The keywords IF NOT EXISTS prevent an error from occurring if the table exists. However, there is no verification that the existing table has a structure identical to that indicated by the CREATE TABLE statement.]]>
             </tooltip>
        </spi>
        
        <!-- The AUTO_INCREMENT of the Table SPI -->
        <spi class-uid="{10000002-0000-0000-0000-000000000003}"
             sql-role-uid="{10000004-0000-0000-0000-000000000005}"
             referred-class-uid="{10000001-0000-0000-0000-000000000001}"
             name="AutoIncrementTableInitial"
             gui-text="Auto Increment Initial value"
             gui-group="Performance"
             default="0"
             db-major="5"
             db-minor="1"
             sql="AUTO_INCREMENT">
             <tooltip>
             <![CDATA[The initial <b>AUTO_INCREMENT</b> value for the table.]]>
             </tooltip>
        </spi>
        
        <!-- the average row length SPI -->
        <spi class-uid="{10000002-0000-0000-0000-000000000003}"
             sql-role-uid="{10000004-0000-0000-0000-000000000006}"
             referred-class-uid="{10000001-0000-0000-0000-000000000001}"
             name="AverageRowLength"
             gui-text="Average Row Length"
             gui-group="Performance"
             default="0"
             db-major="5"
             db-minor="1"
             sql="AVG_ROW_LENGTH">
             <tooltip>
             <![CDATA[An approximation of the average row length for your table. <p> You need to set this only for large tables with variable-size rows."]]>
             </tooltip>
        </spi>
             
        <!-- The storage engine SPI. Defaults: must start with empty value, that's why there's the funny comma
             The first element always is the default.
          -->
        <spi class-uid="{10000002-0000-0000-0000-000000000002}"
             sql-role-uid="{10000004-0000-0000-0000-000000000003}"
             referred-class-uid="{10000001-0000-0000-0000-000000000001}"
             name="StorageEngine"
             gui-text="Storage Engine"
             gui-group="Advanced"
             default=",MyISAM,InnoDB,Memory,Archive,Merge,BDB,Federated,Archive,CSV,Blackhole"
             db-major="5"
             db-minor="0"
             sql="ENGINE=">
             <tooltip>
             <![CDATA[The Storage engine of the table.<p>You can select which storage engine to use for the table you defined.<p>Warning: Only tables defined with the InnoDB storage engine support foreign keys]]>
             </tooltip>
        </spi>

        <!-- Codepage SPI for MySql tables -->
        <spi class-uid="{10000002-0000-0000-0000-000000000002}"
          sql-role-uid="{10000004-0000-0000-0000-000000000004}"
          referred-class-uid="{10000001-0000-0000-0000-000000000001}"
          name="Codepage"
          gui-text="Codepage"
          gui-group="Advanced"
          default=",--Unicode,UCS2,ucs2_bin,ucs2_czech_ci,ucs2_danish_ci,ucs2_esperanto_ci,ucs2_estonia_ci,ucs2_general_ci,ucs2_hungarian_ci,ucs2_icelandic_ci,ucs2_latvian_ci,ucs2_lithuanian_ci,ucs2_persian_ci,ucs2_polish_ci,ucs2_roman_ci,ucs2_romanian_ci,ucs2_slovak_ci,ucs2_slovenian_ci,ucs2_spanish2_ci,ucs2_spanish_ci,ucs2_swedish_ci,ucs2_turkish_ci,ucs2_unicode_ci,--Unicode,UTF8,utf8_bin,utf8_czech_ci,utf8_danish_ci,utf8_esperanto_ci,utf8_estonia_ci,utf8_general_ci,utf8_hungarian_ci,utf8_icelandic_ci,utf8_latvian_ci,utf8_lithuanian_ci,utf8_persian_ci,utf8_polish_ci,utf8_roman_ci,utf8_romanian_ci,utf8_slovak_ci,utf8_slovenian_ci,utf8_spanish2_ci,utf8_spanish_ci,utf8_swedish_ci,utf8_turkish_ci,utf8_unicode_ci,--WesternEuropean,ascii_bin,ascii_general,dec8_bin,dec8_swedish_ci,hp8_bin,hp8_english_ci,latin1_bin,latin1_danish_ci,latin1_general_ci,latin1_general_cs,latin1_german1_ci,latin1_german2_ci,latin1_spanish_ci,latin1_swedish_ci,--CentralEuropean,cp1250_bin,cp1250_croatian_ci,cp1250_czech_cs,cp1250_general_ci,cp852_bin,cp852_general_ci,keybcs2_bin,keybcs2_general_ci,latin2_bin,latin2_croatian_ci,latin2_czech_cs,latin2_general_ci,latin2_hungarian_ci,macce_bin,macce_general_ci,--SouthEuropean,armscii8_bin,armscii8_general_ci,cp1256_bin,cp1256_general_ci,geostd8_bin,geostd8_general_ci,greek_bin,greek_general_ci,hebrew_bin,hebrew_general_ci,latin5_bin,latin5_turkish_ci,--Baltic,cp1257_bin,cp1257_general_ci,cp1257_lithuanian_ci,latin7_bin,latin7_estonia_cs,latin7_general_ci,latin7_general_cs,--Cyrillic,cp1251_bin,cp1251_bulgarian_ci,cp1251_general_ci,cp1251_general_cs,cp1251_ukrainian_ci,cp866_bin,cp866_general_ci,koi8r_bin,koi8r_general_ci,koi8u_bin,koi8u_general_ci,--Asian,big5_bin,big5_chinese_ci,cp932_bin,cp932_japanese_ci,eucjpms_bin,eucjpms_japanese_ci,euckr_bin,euckr_korean_ci,gb2312_bin,gb2312_chinese_ci,gbk_bin,gbk_chinese_ci,sjis_bin,sjis_japanese_ci,tis620_bin,tis620_thai_ci,ujis_bin,ujis_japanese_ci"
          db-major="5"
          db-minor="0"
          sql=""
          >
          <tooltip>
            <![CDATA[The Codepage for the given table]]>
          </tooltip>
        </spi>
                 
        <!-- Index types SPI for MySql indexes -->
        <spi class-uid="{10000002-0000-0000-0000-000000000002}"
          sql-role-uid="{10000005-0000-0000-0000-000000000001}"
          referred-class-uid="{10000001-0000-0000-0000-000000000008}"
          name="IndexType"
          gui-text="Index Type"
          gui-group="General"
          default=",BTREE,HASH"
          db-major="5"
          db-minor="0"
          sql="USING"
          >
          <tooltip>
            <![CDATA[Which Index type should the DB use]]>
          </tooltip>
        </spi>
        
        <!-- The Index Category -->
        <spi class-uid="{10000002-0000-0000-0000-000000000002}"
          sql-role-uid="{10000005-0000-0000-0000-000000000002}"
          referred-class-uid="{10000001-0000-0000-0000-000000000008}"
          name="IndexCategory"
          gui-text="Index Category"
          gui-group="General"
          default=",UNIQUE,FULLTEXT"
          db-major="5"
          db-minor="0"
          >
          <tooltip>
            <![CDATA[The Index Category of the index]]>
          </tooltip>
        </spi>
        
        <!-- The Columng Length of an Index SPI -->
        <spi class-uid="{10000002-0000-0000-0000-000000000003}"
          sql-role-uid="{10000006-0000-0000-0000-000000000001}"
          referred-class-uid="{10000001-0000-0000-0000-00000000000B}"
          name="ColumnOfIndexUsedLength"
          gui-text="The Length of the columns' data which is used in the length"
          gui-group="default"
          default=""
          db-major="5"
          db-minor="0"
          sql=""
          >
          <tooltip>
            <![CDATA[The Length of the column used in an index. This can be assigned only to TEXT/BLOB type columns]]>
          </tooltip>
        </spi>
        
        <!-- The Auto Increment specification of a column -->
        <spi class-uid="{10000002-0000-0000-0000-000000000001}"
          sql-role-uid="{10000007-0000-0000-0000-000000000001}"
          referred-class-uid="{10000001-0000-0000-0000-000000000007}"
          name="AutoIncrementColumn"
          gui-text="This column is Auto Incrementing (AUTO_INCREMENT)"
          gui-group="General"
          default="0"
          db-major="5"
          db-minor="0"
          sql="AUTO_INCREMENT"          
          >
          <tooltip>
            <![CDATA[Auto-increment allows a unique number to be generated when a new record is inserted into a table]]>
          </tooltip>
        </spi>
        
        <!-- The zero Fill SPI -->
        <spi class-uid="{10000002-0000-0000-0000-000000000001}" 
          sql-role-uid="{10000007-0000-0000-0000-000000000002}"
          referred-class-uid="{10000001-0000-0000-0000-000000000007}"
          name="ZeroFill"
          gui-text="Zero Fill"
          gui-group="General"
          default="0"
          db-major="5"
          db-minor="0"
          sql="ZEROFILL"
          >
          <tooltip>
            <![CDATA[When used in conjunction with the optional (nonstandard) attribute ZEROFILL, the default padding of spaces is replaced with zeros. ]]>
          </tooltip>
        </spi>
        
        <!-- The CAN REPLACE attribute of a view -->
        <spi class-uid="{10000002-0000-0000-0000-000000000001}" 
          sql-role-uid="{10000006-0000-0000-0000-000000000002}"
          referred-class-uid="{10000001-0000-0000-0000-000000000003}" 
          db-major="5" 
          db-minor="0" 
          default="0" 
          gui-group="General" 
          gui-text="Can Replace" 
          name="CanRepalce" 
          sql="OR REPLACE" 
          >
          <tooltip>
            <![CDATA[Can this view replace an already existing one?]]>
          </tooltip>
        </spi>
      </spis>
      
      <!-- The function categories supported by this database engine -->
      <function-categories>
        <function-category name = "Control Flow" id= "FT_CONTROLFLOW" value="0" />
        <function-category name = "String" id= "FT_STRING" value="1" />
        <function-category name = "Numerical" id= "FT_NUMERIC" value="2" />
        <function-category name = "Date/Time" id= "FT_DATETIME" value="3" />
        <function-category name = "Casting" id= "FT_CAST" value="5" />
        <function-category name = "Bit operation" id= "FT_BIT" value="6" />
        <function-category name = "Cryptography" id= "FT_CRYPT" value="7" />
        <function-category name = "Information" id= "FT_INFO" value="8" />
        <function-category name = "Miscellaneous" id= "FT_MISC" value="9" />
        <function-category name = "Aggregate" id= "FT_AGGREGATE" value="10" role="aggregate"/>
      </function-categories>
      
      <!-- Control Flow: CASE is not supported -->
      <!-- FULLTEXT Search functions not supported -->
      
      <!-- And the list of functions supported by this database. -->
      <functions>
        <function name="@if" category="FT_CONTROLFLOW" category-value="0" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["IF(expr1,expr2,expr3) If expr1 is TRUE (expr1 <> 0 and expr1 <> NULL) then IF() returns expr2; otherwise it returns expr3. IF() returns a numeric or string value, depending on the context in which it is used."]]>
          </description>
        </function>
        
        <function name="@ifnull" category="FT_CONTROLFLOW" category-value="0" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["IFNULL(expr1,expr2) If expr1 is not NULL, IFNULL() returns expr1; otherwise it returns expr2. IFNULL() returns a numeric or string value, depending on the context in which it is used."]]>
          </description>
        </function>
        
        <function name="@nullif" category="FT_CONTROLFLOW" category-value="0" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["NULLIF(expr1,expr2) Returns NULL if expr1 = expr2 is true, otherwise returns expr1."]]>
          </description>
        </function>
        
        <function name="@abs" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ABS(X) Returns the absolute value of X"]]>
          </description>
        </function>
        
        <function name="@acos" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ACOS(X) Returns the arc cosine of X, that is, the value whose cosine is X. Returns NULL if X is not in the range -1 to 1. "]]>
          </description>
        </function>
        
        <function name="@asin" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ASIN(X) Returns the arc sine of X, that is, the value whose sine is X. Returns NULL if X is not in the range -1 to 1. "]]>
          </description>
        </function>
        
        <function name="@atan" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ATAN(X) Returns the arc tangent of X, that is, the value whose tangent is X."]]>
          </description>
        </function>
        
        <function name="@ceiling" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["CEILING(X) Returns the smallest integer value not less than X."]]>
          </description>
        </function>
        
        <function name="@conv" category="FT_NUMERIC" category-value="2" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["CONV(X,from_base,to_base) Converts numbers between different number bases. Returns a string representation of the number N, converted from base from_base to base to_base."]]>
          </description>
        </function>
        
        <function name="@cos" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["COS(X) Returns the cosine of X, where X is given in radians. "]]>
          </description>
        </function>
        
        <function name="@cot" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["COT(X) Returns the cotangent of X."]]>
          </description>
        </function>
        
        <function name="@crc32" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["CRC32(str) Computes a cyclic redundancy check value and returns a 32-bit unsigned value."]]>
          </description>
        </function>
        
        <function name="@degrees" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["DEGREES(X) Returns the argument X, converted from radians to degrees. "]]>
          </description>
        </function>
        
        <function name="@exp" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["EXP(X) Returns the value of e (the base of natural logarithms) raised to the power of X."]]>
          </description>
        </function>
        
        <function name="@floor" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["FLOOR(X) Returns the largest integer value not greater than X."]]>
          </description>
        </function>
        
        <function name="@ln" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LN(X) Returns the natural logarithm of X; that is, the base-e logarithm of X."]]>
          </description>
        </function>
        
        <function name="@log" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LOG(B,X) Returns the logarithm of X to the base B"]]>
          </description>
        </function>
        
        <function name="@log2" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LOG2(X) Returns the 2-base logarithm of X"]]>
          </description>
        </function>
        
        <function name="@log10" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LOG10(X) Returns the 10-base logarithm of X"]]>
          </description>
        </function>
        
        <function name="@pi" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["PI() Returns the value of p (pi)."]]>
          </description>
        </function>
        
        <function name="@pow" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["POW(X,Y) Returns the value of X raised to the power of Y."]]>
          </description>
        </function>
        
        <function name="@radians" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["RADIANS(X) Returns the argument X, converted from degrees to radians. (Note that π radians equals 180 degrees.)"]]>
          </description>
        </function>
        
        <function name="@rand" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          substring_index  <parameters count="1" >
            <parameter name="" type="OPAR_NUMERIC" />  
          </parameters>
          <description>
            <![CDATA["RAND([N]) Returns a random floating-point value v in the range 0 <= v < 1.0. If a constant integer argument N is specified, it is used as the seed value."]]>
          </description>
        </function>
        
        <function name="@round" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="OPAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ROUND(X,D) Rounds the argument X to D decimal places."]]>
          </description>
        </function>
        
        <function name="@sign" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SIGN(X) Returns the sign of the argument as -1, 0, or 1, depending on whether X is negative, zero, or positive."]]>
          </description>
        </function>
        
        <function name="@sin" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SIN(X) Returns the sine of X, where X is given in radians."]]>
          </description>
        </function>
        
        <function name="@sqrt" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SQRT(X) Returns the square root of a nonnegative number X."]]>
          </description>
        </function>
        
        <function name="@tan" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["TAN(X) Returns the tangent of X, where X is given in radians."]]>
          </description>
        </function>
        
        <function name="@truncate" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="OPAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["TRUNCATE(X,D) Returns the number X, truncated to D decimal places."]]>
          </description>
        
        </function>
        
        <function name="@adddate" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ADDDATE(expr,days) Adds the given days to the date."]]>
          </description>
        </function>
        
        <function name="@addtime" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["ADDTIME(expr1,expr2) Adds expr2 to expr1 and returns the result. expr1 is a time or datetime expression, and expr2 is a time expression."]]>
          </description>
        </function>
        
        <function name="@addtime" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["CONVERT_TZ(dt,from_tz,to_tz) CONVERT_TZ() converts a datetime value dt from the time zone given by from_tz to the time zone given by to_tz and returns the resulting value."]]>
          </description>
        </function>
        
        <function name="@curdate" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["CURDATE() Returns the current date as a value in 'YYYY-MM-DD' or YYYYMMDD format, depending on whether the function is used in a string or numeric context."]]>
          </description>
        </function>
        
        <function name="@curtime" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["CURTIME() Returns the current time as a value in 'HH:MM:SS' or HHMMSS.uuuuuu format, depending on whether the function is used in a string or numeric context. The value is expressed in the current time zone."]]>
          </description>
        </function>
        
        <function name="@date" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATE(expr) Extracts the date part of the date or datetime expression expr."]]>
          </description>
        </function>
        
        <function name="@datediff" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATEDIFF(expr1,expr2) Returns expr1 – expr2 expressed as a value in days from one date to the other. expr1 and expr2 are date or date-and-time expressions. Only the date parts of the values are used in the calculation. "]]>
          </description>
        </function>
        
        <function name="@date_add" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATE_ADD(date,INTERVAL expr unit) Performs date arithmetic. The date argument specifies the starting date or datetime value. expr is an expression specifying the interval value to be added or subtracted from the starting date."]]>
          </description>
        </function>
        
        <function name="@date_sub" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATE_SUB(date,INTERVAL expr unit) Performs date arithmetic. The date argument specifies the starting date or datetime value. expr is an expression specifying the interval value to be added or subtracted from the starting date."]]>
          </description>
        </function>
        
        <function name="@date_format" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATE_FORMAT(date,expr) Formats the date value according to the format string."]]>
          </description>
        </function>
        
        <function name="@dayname" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DAYNAME(date) Returns the name of the weekday for date."]]>
          </description>
        </function>
        
        <function name="@dayofmonth" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DAYOFMONTH(date) Returns the day of the month for date, in the range 1 to 31, or 0 for dates such as '0000-00-00' or '2008-00-00' that have a zero day part."]]>
          </description>
        </function>
        
        <function name="@dayofweek" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DAYOFWEEK(date) Returns the weekday index for date (1 = Sunday, 2 = Monday, ... , 7 = Saturday)."]]>
          </description>
        </function>
        
        <function name="@dayofyear" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DAYOFYEAR(date) Returns the day of the year for date, in the range 1 to 366."]]>
          </description>
        </function>
        
        <function name="@extract" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["EXTRACT(unit FROM date) The EXTRACT() function uses the same kinds of unit specifiers as DATE_ADD() or DATE_SUB( category=" but extracts parts from the date rather than performing date arithmetic."]]>
          </description>
        </function>
        
        <function name="@from_days" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["FROM_DAYS(N) Given a day number N, returns a DATE value. "]]>
          </description>
        </function>
        
        <function name="@from_unixtime" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="OPAR_STRING" />
          </parameters>
          <description>
            <![CDATA["FROM_UNIXTIME(N,[FORMAT]) Returns a representation of the unix_timestamp argument as a value in 'YYYY-MM-DD HH:MM:SS' or YYYYMMDDHHMMSS.uuuuuu format, depending on whether the function is used in a string or numeric context. If format is given, the result is formatted according to the format string."]]>
          </description>
        </function>
        
        <function name="@get_format" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["GET_FORMAT({DATE|TIME|DATETIME}, {'EUR'|'USA'|'JIS'|'ISO'|'INTERNAL'}) Returns a format string. This function is useful in combination with the DATE_FORMAT() and the STR_TO_DATE() functions."]]>
          </description>
        </function>
        
        <function name="@hour" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["HOUR(time) Returns the hour for time."]]>
          </description>
        </function>
        
        <function name="@last_day" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LAST_DAY(date) Takes a date or datetime value and returns the corresponding value for the last day of the month."]]>
          </description>
        </function>
        
        <function name="@makedate" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MAKEDATE(year,dayofyear) Returns a date, given year and day-of-year values. dayofyear must be greater than 0 or the result is NULL."]]>
          </description>
        </function>
        
        <function name="@maketime" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["MAKETIME(hour,min,second) Returns a time value calculated from the hour, minute, and second arguments."]]>
          </description>
        </function>
        
        <function name="@microsecond" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MICROSECOND(expr) Returns the microseconds from the time or datetime expression expr as a number in the range from 0 to 999999."]]>
          </description>
        </function>
        
        <function name="@minute" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MINUTE(time) Returns the minute for time."]]>
          </description>
        </function>
        
        <function name="@month" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MONTH(date) Returns the month for date, in the range 1 to 12 for January to December, or 0 for dates such as '0000-00-00' or '2008-00-00' that have a zero month part."]]>
          </description>
        </function>
        
        <function name="@monthname" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MONTHNAME(date) Returns the full name of the month for date."]]>
          </description>
        </function>
        
        <function name="@now" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["Returns the current date and time as a value in 'YYYY-MM-DD HH:MM:SS' or YYYYMMDDHHMMSS.uuuuuu format"]]>
          </description>
        </function>
        
        <function name="@period_add" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["PERIOD_ADD(P,N) Adds N months to period P (in the format YYMM or YYYYMM). Returns a value in the format YYYYMM. Note that the period argument P is not a date value."]]>
          </description>
        </function>
        
        <function name="@period_diff" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["PERIOD_DIFF(P1,P2) Returns the number of months between periods P1 and P2. P1 and P2 should be in the format YYMM or YYYYMM. Note that the period arguments P1 and P2 are not date values."]]>
          </description>
        </function>
        
        <function name="@quarter" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["QUARTER(date) Returns the quarter of the year for date, in the range 1 to 4."]]>
          </description>
        </function>
        
        <function name="@second" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["SECOND(time) Returns the second of the time in range 0 to 59."]]>
          </description>
        </function>
        
        <function name="@sec_to_time" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["SEC_TO_TIME(seconds) Returns the seconds argument, converted to hours, minutes, and seconds, as a TIME value."]]>
          </description>
        </function>
        
        <function name="@str_to_date" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["STR_TO_DATE(str,format) Returns a DATETIME value if the format string contains both date and time parts, or a DATE or TIME value if the string contains only date or time parts."]]>
          </description>
        </function>
        
        <function name="@subdate" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SUBDATE(expr,days) Returns the date value obtained by substracting days from expr."]]>
          </description>
        </function>
        
        <function name="@subtime" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["SUBTIME(expr1,expr2) Returns expr1 – expr2 expressed as a value in the same format as expr1. expr1 is a time or datetime expression, and expr2 is a time expression."]]>
          </description>
        </function>
        
        <function name="@sysdate" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["Returns the current date and time as a value in 'YYYY-MM-DD HH:MM:SS' or YYYYMMDDHHMMSS.uuuuuu format, depending on whether the function is used in a string or numeric context."]]>
          </description>
        </function>
        
        <function name="@time" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIME(expr) Extracts the time part of the time or datetime expression expr and returns it as a string."]]>
          </description>
        </function>
        
        <function name="@timediff" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIMEDIFF(expr1,expr2) Returns expr1 – expr2 expressed as a time value. expr1 and expr2 are time or date-and-time expressions, but both must be of the same type."]]>
          </description>
        </function>
        
        <function name="@timestamp" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIMESTAMP(expr1,expr2) It adds the time expression expr2 to the date or datetime expression expr1 and returns the result as a datetime value."]]>
          </description>
        </function>
        
        <function name="@timestamp" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIMESTAMP(expr) Returns the date or datetime expression expr as a datetime value."]]>
          </description>
        </function>
        
        <function name="@timestampadd" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIMESTAMPADD(unit,interval,datetime_expr) Adds the integer expression interval to the date or datetime expression datetime_expr. The unit for interval is given by the unit argument, which should be one of the following values: FRAC_SECOND (microseconds category=" SECOND, MINUTE, HOUR, DAY, WEEK, MONTH, QUARTER, or YEAR."]]>
          </description>
        </function>
        
        <function name="@timestampdiff" category="FT_DATETIME" category-value="3" return="RET_DATETIME" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIMESTAMPDIFF(unit,datetime_expr1,datetime_expr2) Returns datetime_expr2 – datetime_expr1, where datetime_expr1 and datetime_expr2 are date or datetime expressions."]]>
          </description>
        </function>
        
        <function name="@time_format" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIME_FORMAT(time,expr) Formats the time value according to the format string."]]>
          </description>
        </function>
        
        <function name="@time_to_sec" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIME_TO_SEC(time) Returns the time argument, converted to seconds."]]>
          </description>
        </function>
        
        <function name="@to_days" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TO_DAYS(date) Given a date date, returns a day number (the number of days since year 0)."]]>
          </description>
        </function>
        
        <function name="@unix_timestamp" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["UNIX_TIMESTAMP() Returns a Unix timestamp (seconds since '1970-01-01 00:00:00' UTC) as an unsigned integer"]]>
          </description>
        </function>
        
        <function name="@unix_timestamp" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["UNIX_TIMESTAMP(date) Returns returns the value of the argument seconds since '1970-01-01 00:00:00' UTC as an unsigned integer"]]>
          </description>
        </function>
        
        <function name="@utc_date" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["UTC_DATE() Returns the current UTC date as a value in 'YYYY-MM-DD' or YYYYMMDD format, depending on whether the function is used in a string or numeric context."]]>
          </description>
        </function>
        
        <function name="@utc_time" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["UTC_TIME() Returns the current UTC time as a value in 'HH:MM:SS' or HHMMSS.uuuuuu format, depending on whether the function is used in a string or numeric context."]]>
          </description>
        </function>
        
        <function name="@utc_timestamp" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["UTC_TIMESTAMP() Returns the current UTC date and time as a value in 'YYYY-MM-DD HH:MM:SS' or YYYYMMDDHHMMSS.uuuuuu format, depending on whether the function is used in a string or numeric context."]]>
          </description>
        </function>
        
        <function name="@week" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["WEEK(date) This function returns the week number for date."]]>
          </description>
        </function>
        
        <function name="@weekday" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["WEEKDAY(date) This function returns the weekday index for date."]]>
          </description>
        </function>
        
        <function name="@weekofyear" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["WEEKOFYEAR(date) Returns the calendar week of the date as a number in the range from 1 to 53."]]>
          </description>
        </function>
        
        <function name="@year" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["YEAR(date) Returns the year for date, in the range 1000 to 9999, or 0 for the “zero” date."]]>
          </description>
        </function>
        
        <function name="@yearweek" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["YEARWEEK(date) Returns year and week for a date."]]>
          </description>
        
        </function>
        
        <function name="@avg" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["AVG(expr) Returns the average value of expr."]]>
          </description>
        </function>
        
        <function name="@bit_and" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["BIT_AND(X) Returns the bitwise AND of all bits in expr. The calculation is performed with 64-bit (BIGINT) precision. "]]>
          </description>
        </function>
        
        <function name="@bit_or" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["BIT_XOR(X) Returns the bitwise OR of all bits in expr. The calculation is performed with 64-bit (BIGINT) precision. "]]>
          </description>
        </function>
        
        <function name="@bit_xor" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["BIT_XOR(X) Returns the bitwise XOR of all bits in expr. The calculation is performed with 64-bit (BIGINT) precision. "]]>
          </description>
        </function>
        
        <function name="@count" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["COUNT([DISTINCT]expr) Returns a count of the number of non-NULL values of expr in the rows retrieved by a SELECT statement. The result is a BIGINT value."]]>
          </description>
        </function>
        
        <function name="@group_concat" category="FT_AGGREGATE" category-value="10" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["GROUP_CONCAT(expr) Returns a string result with the concatenated non-NULL values from a group. It returns NULL if there are no non-NULL values. "]]>
          </description>
        </function>
        
        <function name="@max" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["MAX(expr) Returns the max value of expr."]]>
          </description>
        </function>
        
        <function name="@min" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["MIN(expr) Returns the min value of expr."]]>
          </description>
        </function>
        
        <function name="@std" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["STD(expr) Returns the population standard deviation of expr."]]>
          </description>
        </function>
        
        <function name="@stddev" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["STDDEV(expr) Returns the population standard deviation of expr."]]>
          </description>
        </function>
        
        <function name="@stddev_pop" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["STDDEV_POP(expr) Returns the population standard deviation of expr."]]>
          </description>
        </function>
        
        <function name="@stddev_samp" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["STDDEV_SAMP(expr) Returns the sample standard deviation of expr."]]>
          </description>
        </function>
        
        <function name="@umd" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SUM(expr) Returns the sum of expr."]]>
          </description>
        </function>
        
        <function name="@var_pop" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["VAR_POP(expr) Returns the population standard variance of expr."]]>
          </description>
        </function>
        
        <function name="@var_samp" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["VAR_SAMP(expr) Returns the sample variance of expr."]]>
          </description>
        
        
        </function>
        
        <function name="@ascii" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["ASCII(str) Returns the numeric value of the leftmost character of the string str. Returns 0 if str is the empty string. Returns NULL if str is NULL. ASCII() works for 8-bit characters."]]>
          </description>
        </function>
        
        <function name="@bin" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["BIN(N) Returns a string representation of the binary value of N, where N is a longlong (BIGINT) number. This is equivalent to CONV(N,10,2). Returns NULL if N is NULL."]]>
          </description>
        </function>
        
        <function name="@bit_length" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["BIT_LENGTH(str) Returns the length of the string str in bits."]]>
          </description>
        </function>
        
        <function name="@char" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["CHAR(N,...) interprets each argument N as an integer and returns a string consisting of the characters given by the code values of those integers. NULL values are skipped."]]>
          </description>
        </function>
        
        <function name="@char_length" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["CHAR_LENGTH(str) Returns the length of the string str, measured in characters. A multi-byte character counts as a single character."]]>
          </description>
        </function>
        
        <function name="@concat" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["CONCAT(str1,str2,...) Returns the string that results from concatenating the arguments. May have one or more arguments."]]>
          </description>
        </function>
        
        <function name="@concat_ws" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["CONCAT_WS(separator,str1,str2,...) stands for Concatenate With Separator and is a special form of CONCAT(). The first argument is the separator for the rest of the arguments. The separator is added between the strings to be concatenated."]]>
          </description>
        </function>
        
        <function name="@elt" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["ELT(N,str1,str2,str3,...) Returns str1 if N = 1, str2 if N = 2, and so on. Returns NULL if N is less than 1 or greater than the number of arguments."]]>
          </description>
        </function>
        
        <function name="@export_set" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="5" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="OPAR_STRING" />
            <parameter name="" type="OPAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["EXPORT_SET(bits,on,off[,separator[,number_of_bits]]) Returns a string such that for every bit set in the value bits, you get an on string and for every bit not set in the value, you get an off string. "]]>
          </description>
        </function>
        
        <function name="@field" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["FIELD(str,str1,str2,str3,...) Returns the index (position) of str in the str1, str2, str3, ... list. Returns 0 if str is not found. "]]>
          </description>
        </function>
        
        <function name="@find_in_set" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["FIND_IN_SET(str,strlist) Returns a value in the range of 1 to N if the string str is in the string list strlist consisting of N substrings."]]>
          </description>
        </function>
        
        <function name="@format" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["FORMAT(X,D) Formats the number X to a format like '#,###,###.##', rounded to D decimal places, and returns the result as a string. If D is 0, the result has no decimal point or fractional part. D should be a constant value. "]]>
          </description>
        </function>
        
        <function name="@hex" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["HEX(N) For a numeric argument N, HEX() returns a hexadecimal string representation of the value of N treated as a longlong (BIGINT) number."]]>
          </description>
        </function>
        
        <function name="@hex" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["HEX(str) For a string argument str, HEX() returns a hexadecimal string representation of str where each character in str is converted to two hexadecimal digits."]]>
          </description>
        </function>
        
        <function name="@insert" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="4" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["INSERT(str,pos,len,newstr) Returns the string str, with the substring beginning at position pos and len characters long replaced by the string newstr."]]>
          </description>
        </function>
        
        <function name="@instr" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["INSTR(str,substr) Returns the position of the first occurrence of substring substr in string str."]]>
          </description>
        </function>
        
        <function name="@left" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LEFT(str,len) Returns the leftmost len characters from the string str, or NULL if any argument is NULL."]]>
          </description>
        </function>
        
        <function name="@length" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LENGTH(str) Returns the length of the string str, measured in bytes."]]>
          </description>
        </function>
        
        <function name="@load_file" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LOAD_FILE(file_name) Reads the file and returns the file contents as a string."]]>
          </description>
        </function>
        
        <function name="@locate" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LOCATE(substr,str) Returns the position of the first occurrence of substring substr in string str."]]>
          </description>
        </function>
        
        <function name="@locate" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["LOCATE(substr,str,pos) Returns the position of the first occurrence of substring substr in string str starting at position pos."]]>
          </description>
        </function>
        
        <function name="@lower" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LOWER(str) Returns the string str with all characters changed to lowercase according to the current character set mapping."]]>
          </description>
        </function>
        
        <function name="@lpad" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LPAD(str,len,padstr) Returns the string str, left-padded with the string padstr to a length of len characters. If str is longer than len, the return value is shortened to len characters. "]]>
          </description>
        </function>
        
        <function name="@ltrim" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["LTRIM(str) Returns the string str with leading space characters removed. "]]>
          </description>
        </function>
        
        <function name="@make_set" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["MAKE_SET(bits,str1,str2,...) Returns a set value (a string containing substrings separated by “,” characters) consisting of the strings that have the corresponding bit in bits set. str1 corresponds to bit 0, str2 to bit 1, and so on."]]>
          </description>
        </function>
        
        <function name="@mid" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["MID(str,pos,len) is a synonym for SUBSTRING(str,pos,len). "]]>
          </description>
        </function>
        
        <function name="@oct" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["OCT(N) Returns a string representation of the octal value of N, where N is a longlong (BIGINT) number."]]>
          </description>
        </function>
        
        <function name="@ord" category="FT_STRING" category-value="1" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["ORD(str) returns the same value as the ASCII() function."]]>
          </description>
        </function>
        
        <function name="@quote" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["QUOTE(str) Quotes a string to produce a result that can be used as a properly escaped data value in an SQL statement. "]]>
          </description>
        </function>
        
        <function name="@repeat" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["REPEAT(str,count) Returns a string consisting of the string str repeated count times. If count is less than 1, returns an empty string. Returns NULL if str or count are NULL."]]>
          </description>
        </function>
        
        <function name="@replace" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["REPLACE(str,from_str,to_str) Returns the string str with all occurrences of the string from_str replaced by the string to_str."]]>
          </description>
        </function>
        
        <function name="@reverse" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["REVERSE(str) Returns the string str with the order of the characters reversed."]]>
          </description>
        </function>
        
        <function name="@right" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["RIGHT(str,len) Returns the rightmost len characters from the string str, or NULL if any argument is NULL."]]>
          </description>
        </function>
        
        <function name="@rpad" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["RPAD(str,len,padstr) Returns the string str, right-padded with the string padstr to a length of len characters. If str is longer than len, the return value is shortened to len characters."]]>
          </description>
        </function>
        
        <function name="@rtrim" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["RTRIM(str) Returns the string str with trailing space characters removed. "]]>
          </description>
        </function>
        
        <function name="@soundex" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["SOUNDEX(str) Returns a soundex string from str. Two strings that sound almost the same should have identical soundex strings. A standard soundex string is four characters long, but the SOUNDEX() function returns an arbitrarily long string."]]>
          </description>
        </function>
        
        <function name="@space" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SPACE(N) Returns a string consisting of N space characters."]]>
          </description>
        </function>
        
        <function name="@substring" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="OPAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SUBSTRING(str,pos,len) Return a substring len characters long from string str, starting at position pos."]]>
          </description>
        </function>
        
        <function name="@substring_index" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SUBSTRING_INDEX(str,delim,count) Returns the substring from string str before count occurrences of the delimiter delim."]]>
          </description>
        </function>
        
        <function name="@trim" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="OPAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TRIM([remstr FROM] str) Returns the string str with all remstr prefixes or suffixes removed."]]>
          </description>
        </function>
        
        <function name="@unhex" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["UNHEX(str) For a string argument str, UNHEX(str) performs the inverse operation of HEX(str)."]]>
          </description>
        </function>
        
        <function name="@upper" category="FT_STRING" category-value="1" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["UPPER(str) Returns the string str with all characters changed to uppercase according to the current character set mapping."]]>
          </description>
        </function>
        
        <function name="@convert" category="FT_CAST" category-value="5"  return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["CONVERT(expr,type) The CONVERT() function takes a value of one type and produces a value of another type. See the online help for more info."]]>
          </description>
        </function>
        
        <function name="@bit_count" category="FT_BIT" category-value="6" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["BIT_COUNT(N) Returns the number of bits that are set in the argument N. "]]>
          </description>
        </function>
        
        <function name="@aes_decrypt" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["AES_DECRYPT(crypt_str,key_str) This function decrypts data using the official AES (Advanced Encryption Standard) algorithm."]]>
          </description>
        </function>
        
        <function name="@aes_encrypt" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["AES_ENCRYPT(str,key_str) This function encrypts a string and returns a binary string using the official AES (Advanced Encryption Standard) algorithm."]]>
          </description>
        </function>
        
        <function name="@compress" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["COMPRESS(str) Compresses a string and returns the result as a binary string."]]>
          </description>
        </function>
        
        <function name="@decode" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DECODE(crypt_str,pass_str) Decrypts the encrypted string crypt_str using pass_str as the password. crypt_str should be a string returned from ENCODE()."]]>
          </description>
        </function>
        
        <function name="@des_decrypt" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="OPAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DES_DECRYPT(crypt_str,pass_str) Decrypts a string encrypted with DES_ENCRYPT()."]]>
          </description>
        </function>
        
        <function name="@des_encrypt" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="OPAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DES_ENCRYPT(str,[key]) Encrypts the string with the given key using the Triple-DES algorithm."]]>
          </description>
        </function>
        
        <function name="@encode" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["ENCODE(str,pass_str) Encrypt str using pass_str as the password. To decrypt the result, use DECODE()."]]>
          </description>
        </function>
        
        <function name="@encrypt" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="OPAR_STRING" />
          </parameters>
          <description>
            <![CDATA["ENCRYPT(str,[salt]) Encrypts str using the Unix crypt() system call and returns a binary string."]]>
          </description>
        </function>
        
        <function name="@md5" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["MD5(str) Calculates an MD5 128-bit checksum for the string. The value is returned as a binary string of 32 hex digits, or NULL if the argument was NULL."]]>
          </description>
        </function>
        
        <function name="@old_password" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["OLD_PASSWORD(str) Returns the value of the pre-4.1 implementation of PASSWORD() as a binary string, and is intended to permit you to reset passwords for any pre-4.1 clients that need to connect to your version 5.0 MySQL server without locking them out."]]>
          </description>
        </function>
        
        <function name="@password" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["PASSWORD(str) Calculates and returns a password string from the plaintext password str and returns a binary string, or NULL if the argument was NULL."]]>
          </description>
        </function>
        
        <function name="@sha" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["SHA(str) Calculates an SHA-1 160-bit checksum for the string, as described in RFC 3174 (Secure Hash Algorithm). The value is returned as a binary string of 40 hex digits, or NULL if the argument was NULL."]]>
          </description>
        </function>
        
        <function name="@uncompress" category="FT_CRYPT" category-value="7" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["UNCOMPRESS(str) Uncompresses a string compressed by the COMPRESS() function."]]>
          </description>
        </function>
        
        <function name="@uncompressed_length" category="FT_CRYPT" category-value="7" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["UNCOMPRESSED:LENGTH(str) Returns the length that the compressed string had before being compressed."]]>
          </description>
        
        </function>
        
        <function name="@benchmark" category="FT_INFO" category-value="8" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["BENCHMARK(count,expr) The BENCHMARK() function executes the expression expr repeatedly count times. It may be used to time how quickly MySQL processes the expression. The result value is always 0."]]>
          </description>
        </function>
        
        <function name="@charset" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["CHARSET(str) Returns the character set of the string argument."]]>
          </description>
        </function>
        
        <function name="@coercibilty" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["COERCIBILITY(str) Returns the collation coercibility value of the string argument."]]>
          </description>
        </function>
        
        <function name="@collation" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["COLLATION(str) Returns the collation of the string argument."]]>
          </description>
        </function>
        
        <function name="@connection_id" category="FT_INFO" category-value="8" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["CONNECTION_ID() Returns the connection ID (thread ID) for the connection. Every connection has an ID that is unique among the set of currently connected clients. "]]>
          </description>
        </function>
        
        <function name="@current_user" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["CURRENT_USER() Returns the user name and host name combination for the MySQL account that the server used to authenticate the current client."]]>
          </description>
        </function>
        
        <function name="@database" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["DATABASE() Returns the default (current) database name as a string in the utf8 character set. If there is no default database, DATABASE() returns NULL."]]>
          </description>
        </function>
        
        <function name="@found_rows" category="FT_INFO" category-value="8" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["FOUND_ROWS() To obtain how many rows the statement would have returned without the LIMIT, include a SQL_CALC_FOUND_ROWS option in the SELECT statement, and then invoke FOUND_ROWS()."]]>
          </description>
        </function>
        
        <function name="@last_insert_id" category="FT_INFO" category-value="8" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["LAST_INSERT_ID() Returns the first automatically generated value that was set for an AUTO_INCREMENT column by the most recently executed INSERT statement to affect such a column."]]>
          </description>
        </function>
        
        <function name="@row_count" category="FT_INFO" category-value="8" return="RET_NUMERIC" >
          <parameters count="0" />
          <description>
            <![CDATA["ROW_COUNT() Returns the number of rows changed, deleted, or inserted by the last statement if it was an UPDATE, DELETE, or INSERT."]]>
          </description>
        </function>
        
        <function name="@schema" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["SCHEMA() is a synonym for DATABASE()."]]>
          </description>
        </function>
        
        <function name="@session_user" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["SESSION_USER() is a synonym for USER()."]]>
          </description>
        </function>
        
        <function name="@system_user" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["SYSTEM_USER() is a synonym for USER()."]]>
          </description>
        </function>
        
        <function name="@user" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["USER() Returns the current MySQL user name and host name as a string in the utf8 character set."]]>
          </description>
        </function>
        
        <function name="@version" category="FT_INFO" category-value="8" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["VERSION() Returns a string that indicates the MySQL server version."]]>
          </description>
        
        </function>
        
        <function name="@default" category="FT_MISC" category-value="9" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DEFAULT(col_name) Returns the default value for a table column."]]>
          </description>
        </function>
        
        <function name="@format" category="FT_MISC" category-value="9" return="RET_STRING" >
          <parameters count="2" >
            <parameter name="" type="PAR_NUMERIC" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["FORMAT(X,D) Formats the number X to a format like '#,###,###.##', rounded to D decimal places, and returns the result as a string."]]>
          </description>
        </function>
        
        <function name="@get_lock" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["GET_LOCK(str,timeout) Tries to obtain a lock with a name given by the string str, using a timeout of timeout seconds. Returns 1 if the lock was obtained successfully, 0 if the attempt timed out."]]>
          </description>
        </function>
        
        <function name="@inet_aton" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["INET_ATON(expr) Given the dotted-quad representation of an IPv4 network address as a string, returns an integer that represents the numeric value of the address in network byte order (big endian)."]]>
          </description>
        </function>
        
        <function name="@inet_ntoa" category="FT_MISC" category-value="9" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["INET_NTOA(expr) Given a numeric IPv4 network address in network byte order, returns the dotted-quad representation of the address as a binary string."]]>
          </description>
        </function>
        
        <function name="@is_free_lock" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["IS_FREE_LOCK(str) Checks whether the lock named str is free to use (that is, not locked)."]]>
          </description>
        </function>
        
        <function name="@is_used_lock" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["IS_USED_LOCK(str) Checks whether the lock named str is in use (that is, locked)."]]>
          </description>
        </function>
        
        <function name="@master_pos_wait" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_NUMERIC" />
              <parameter name="" type="OPAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["MASTER_POS_WAIT(log_name,log_pos[,timeout]) This function is useful for control of master/slave synchronization. It blocks until the slave has read and applied all updates up to the specified position in the master log. The return value is the number of log events the slave had to wait for to advance to the specified position."]]>
          </description>
        </function>
        
        <function name="@name_const" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="2" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["NAME_CONST(name,value) Returns the given value. When used to produce a result set column, NAME_CONST() causes the column to have the given name. The arguments should be constants."]]>
          </description>
        </function>
        
        <function name="@release_lock" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["RELEASE_LOCK(str) Releases the lock named by the string str that was obtained with GET_LOCK()."]]>
          </description>
        </function>
        
        <function name="@sleep" category="FT_MISC" category-value="9" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["SLEEP(duration) Sleeps (pauses) for the number of seconds given by the duration argument, then returns 0. If SLEEP() is interrupted, it returns 1."]]>
          </description>
        </function>
        
        <function name="@uuid" category="FT_MISC" category-value="9" return="RET_STRING" >
          <parameters count="0" />
          <description>
            <![CDATA["UUID()Returns a Universal Unique Identifier (UUID) generated according to “DCE 1.1: Remote Procedure Call” (Appendix A) CAE (Common Applications Environment) Specifications published by The Open Group in October 1997 (Document Number C706, http://www.opengroup.org/public/pubs/catalog/c706.htm). "]]>
          </description>
        </function>
      </functions>
    </database>

    <database name="Sqlite" id="SQLITE" class-uid="{100000DB-0000-0000-0000-000000000002}">
      <datatype-groups>
        <!-- Text types -->
        <datatype-group type="0" name="Text/String" >
        </datatype-group>
          <datatype name="CHAR" max-size="-1" />
          <datatype name="CLOB" max-size="-1" />
          <datatype name="TEXT" max-size="-1" default = "1"/>
      
        <!-- Numerical types -->
        <datatype-group type="1" name="Numeric">
          <datatype name = "INT" max-size="-1" default="1" />
          <datatype name = "REAL" max-size="-1" />
        </datatype-group>
        
        <!-- Boolean types -->        
        <datatype-group type="2" name="Boolean">
        <datatype name="BOOLEAN" max-size="-1" default="1" />
        </datatype-group>
        
        <!-- Date time types -->
        <datatype-group type="3" name="Date/Time">
          <datatype name="DATETIME" max-size="-1" default="1" />
        </datatype-group>
        
        <!-- Blob types -->
        <datatype-group type="4" name="Blob/Binary">
          <datatype name="BLOB" default="1" />
        </datatype-group>
        
        <!-- Miscellaneous types -->
        <datatype-group type="5" name="Misc">
        </datatype-group>
        
        <!-- Spatial types -->
        <datatype-group type="6" name="Spatial">
        </datatype-group>
      </datatype-groups>        
      <keywords>
        <keyword description ="" text= "ABORT" />
        <keyword description ="" text= "ACTION" />
        <keyword description ="" text= "ADD" />
        <keyword description ="" text= "AFTER" />
        <keyword description ="" text= "ALL" />
        <keyword description ="" text= "ALTER" />
        <keyword description ="" text= "ANALYZE" />
        <keyword description ="" text= "AND" />
        <keyword description ="" text= "AS" />
        <keyword description ="" text= "ASC" />
        <keyword description ="" text= "ATTACH" />
        <keyword description ="" text= "AUTOINCREMENT" />
        <keyword description ="" text= "BEFORE" />
        <keyword description ="" text= "BEGIN" />
        <keyword description ="" text= "BETWEEN" />
        <keyword description ="" text= "BY" />
        <keyword description ="" text= "CASCADE" />
        <keyword description ="" text= "CASE" />
        <keyword description ="" text= "CAST" />
        <keyword description ="" text= "CHECK" />
        <keyword description ="" text= "COLLATE" />
        <keyword description ="" text= "COLUMN" />
        <keyword description ="" text= "COMMIT" />
        <keyword description ="" text= "CONFLICT" />
        <keyword description ="" text= "CONSTRAINT" />
        <keyword description ="" text= "CREATE" />
        <keyword description ="" text= "CROSS" />
        <keyword description ="" text= "CURRENT_DATE" />
        <keyword description ="" text= "CURRENT_TIME" />
        <keyword description ="" text= "CURRENT_TIMESTAMP" />
        <keyword description ="" text= "DATABASE" />
        <keyword description ="" text= "DEFAULT" />
        <keyword description ="" text= "DEFERRABLE" />
        <keyword description ="" text= "DEFERRED" />
        <keyword description ="" text= "DELETE" />
        <keyword description ="" text= "DESC" />
        <keyword description ="" text= "DETACH" />
        <keyword description ="" text= "DISTINCT" />
        <keyword description ="" text= "DROP" />
        <keyword description ="" text= "EACH" />
        <keyword description ="" text= "ELSE" />
        <keyword description ="" text= "END" />
        <keyword description ="" text= "ESCAPE" />
        <keyword description ="" text= "EXCEPT" />
        <keyword description ="" text= "EXCLUSIVE" />
        <keyword description ="" text= "EXISTS" />
        <keyword description ="" text= "EXPLAIN" />
        <keyword description ="" text= "FAIL" />
        <keyword description ="" text= "FOR" />
        <keyword description ="" text= "FOREIGN" />
        <keyword description ="" text= "FROM" />
        <keyword description ="" text= "FULL" />
        <keyword description ="" text= "GLOB" />
        <keyword description ="" text= "GROUP" />
        <keyword description ="" text= "HAVING" />
        <keyword description ="" text= "IF" />
        <keyword description ="" text= "IGNORE" />
        <keyword description ="" text= "IMMEDIATE" />
        <keyword description ="" text= "IN" />
        <keyword description ="" text= "INDEX" />
        <keyword description ="" text= "INDEXED" />
        <keyword description ="" text= "INITIALLY" />
        <keyword description ="" text= "INNER" />
        <keyword description ="" text= "INSERT" />
        <keyword description ="" text= "INSTEAD" />
        <keyword description ="" text= "INTERSECT" />
        <keyword description ="" text= "INTO" />
        <keyword description ="" text= "IS" />
        <keyword description ="" text= "ISNULL" />
        <keyword description ="" text= "JOIN" />
        <keyword description ="" text= "KEY" />
        <keyword description ="" text= "LEFT" />
        <keyword description ="" text= "LIKE" />
        <keyword description ="" text= "LIMIT" />
        <keyword description ="" text= "MATCH" />
        <keyword description ="" text= "NATURAL" />
        <keyword description ="" text= "NO" />
        <keyword description ="" text= "NOT" />
        <keyword description ="" text= "NOTNULL" />
        <keyword description ="" text= "NULL" />
        <keyword description ="" text= "OF" />
        <keyword description ="" text= "OFFSET" />
        <keyword description ="" text= "ON" />
        <keyword description ="" text= "OR" />
        <keyword description ="" text= "ORDER" />
        <keyword description ="" text= "OUTER" />
        <keyword description ="" text= "PLAN" />
        <keyword description ="" text= "PRAGMA" />
        <keyword description ="" text= "PRIMARY" />
        <keyword description ="" text= "QUERY" />
        <keyword description ="" text= "RAISE" />
        <keyword description ="" text= "REFERENCES" />
        <keyword description ="" text= "REGEXP" />
        <keyword description ="" text= "REINDEX" />
        <keyword description ="" text= "RELEASE" />
        <keyword description ="" text= "RENAME" />
        <keyword description ="" text= "REPLACE" />
        <keyword description ="" text= "RESTRICT" />
        <keyword description ="" text= "RIGHT" />
        <keyword description ="" text= "ROLLBACK" />
        <keyword description ="" text= "ROW" />
        <keyword description ="" text= "SAVEPOINT" />
        <keyword description ="" text= "SELECT" />
        <keyword description ="" text= "SET" />
        <keyword description ="" text= "TABLE" />
        <keyword description ="" text= "TEMP" />
        <keyword description ="" text= "TEMPORARY" />
        <keyword description ="" text= "THEN" />
        <keyword description ="" text= "TO" />
        <keyword description ="" text= "TRANSACTION" />
        <keyword description ="" text= "TRIGGER" />
        <keyword description ="" text= "UNION" />
        <keyword description ="" text= "UNIQUE" />
        <keyword description ="" text= "UPDATE" />
        <keyword description ="" text= "USING" />
        <keyword description ="" text= "VACUUM" />
        <keyword description ="" text= "VALUES" />
        <keyword description ="" text= "VIEW" />
        <keyword description ="" text= "VIRTUAL" />
        <keyword description ="" text= "WHEN" />
        <keyword description ="" text= "WHERE"/>
      </keywords>
      <trigger-defs>
        <field role="event" value="INSERT" />
        <field role="event" value="UPDATE" />
        <field role="event" value="DELETE" />
        <field role="time" value="BEFORE" />
        <field role="time" value="AFTER" />
      </trigger-defs>
      <!-- The function categories supported by this database engine -->
      <function-categories>
        <function-category name = "Control Flow" id= "FT_CONTROLFLOW" value="0" />
        <function-category name = "String" id= "FT_STRING" value="1" />
        <function-category name = "Numerical" id= "FT_NUMERIC" value="2" />
        <function-category name = "Date/Time" id= "FT_DATETIME" value="3" />
        <function-category name = "Aggregate" id= "FT_AGGREGATE" value="10" role="aggregate"/>
      </function-categories>
      
      <!-- The dunctions of SqLite -->
      <functions>
        <function name="@if" category="FT_CONTROLFLOW" category-value="0" return="RET_STRING" >
          <parameters count="3" >
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["IF(expr1,expr2,expr3) If expr1 is TRUE (expr1 <> 0 and expr1 <> NULL) then IF() returns expr2; otherwise it returns expr3. IF() returns a numeric or string value, depending on the context in which it is used."]]>
          </description>
        </function>

        <function name="@abs" category="FT_NUMERIC" category-value="2" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["ABS(X) Returns the absolute value of X"]]>
          </description>
        </function>

        <function name="@date" category="FT_DATETIME" category-value="3" return="RET_STRING" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["DATE(expr) Extracts the date part of the date or datetime expression expr."]]>
          </description>
        </function>

        <function name="@time" category="FT_DATETIME" category-value="3" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_STRING" />
          </parameters>
          <description>
            <![CDATA["TIME(expr) Extracts the time part of the time or datetime expression expr and returns it as a string."]]>
          </description>
        </function>

        <function name="@avg" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_NUMERIC" />
          </parameters>
          <description>
            <![CDATA["AVG(expr) Returns the average value of expr."]]>
          </description>
        </function>
        <function name="@count" category="FT_AGGREGATE" category-value="10" return="RET_NUMERIC" >
          <parameters count="1" >
            <parameter name="" type="PAR_VARIABLE" />
          </parameters>
          <description>
            <![CDATA["COUNT([DISTINCT]expr) Returns a count of the number of non-NULL values of expr in the rows retrieved by a SELECT statement. The result is a BIGINT value."]]>
          </description>
        </function>
        
      </functions>        
    </database>

    <database name="CUBRID" id="CUBRID" class-uid="{100000DB-0000-0000-0000-000000000003}">
      <datatype-groups>
        <!-- Text types -->
        <datatype-group type="0" name="Text/String" >
          <datatype name="CHAR" max-size="1073741823" />
          <datatype name="VARCHAR" max-size="1073741823" default="1" />
          <datatype name="STRING" />
        </datatype-group>

        <!-- Numerical types -->
        <datatype-group type="1" name="Numeric">
          <datatype name="SHORT" max-size="1" />
          <datatype name="SMALLINT" max-size="1" /> 
          <datatype name="INT" max-size="1" default="1" />
          <datatype name="INTEGER" max-size="1" />
          <datatype name="BIGINT" max-size="1" />
          <datatype name="DECIMAL" max-size="1" />
          <datatype name="NUMERIC" max-size="1" />
          <datatype name="FLOAT" max-size="1" />
          <datatype name="REAL" max-size="38" />
          <datatype name="DOUBLE" max-size="38" />
          <datatype name="DOUBLE PRECISION" max-size="1" />
          <datatype name="BIT" max-size="1073741823" />
          <datatype name="BIT VARYING" max-size="1073741823" />
          <datatype name="MONETARY" /> 
        </datatype-group>
        
        <!-- Date time types -->
        <datatype-group type="3" name="Date/Time">
          <datatype name="DATETIME" max-size="-1" default="1" />
          <datatype name="DATE" max-size="-1" />
          <datatype name="TIME" max-size="-1" />
          <datatype name="TIMESTAMP" max-size="-1" />
        </datatype-group>        
      
        <!-- Blob types -->
        <datatype-group type="4" name="Blob/Binary">
          <datatype name="BLOB" default="1" />
          <datatype name="CLOB" />
        </datatype-group>
        
        <!-- Miscellaneous types -->
        <datatype-group type="5" name="Misc">
          <datatype name="ENUM" max-size="-1" default="1" />
          <datatype name="SET" max-size="-1" />
          <datatype name="MULTISET" max-size="-1" />
          <datatype name="LIST" max-size="-1" />
        </datatype-group>
      </datatype-groups>
      
      <keywords>
        <keyword description="" text="ABSOLUTE" />
        <keyword description="" text="ALLOCATE" />
        <keyword description="" text="ASSERTION" />
        <keyword description="" text="ACTION" />
        <keyword description="" text="ALTER" />
        <keyword description="" text="ASYNC" />
        <keyword description="" text="ADD" />
        <keyword description="" text="AND" />
        <keyword description="" text="AT" />
        <keyword description="" text="ADD_MONTH" />
        <keyword description="" text="ANY" />
        <keyword description="" text="ATTACH" />
        <keyword description="" text="AFTER" />
        <keyword description="" text="ARE" />
        <keyword description="" text="ATTRIBUTE" />
        <keyword description="" text="ALIAS" />
        <keyword description="" text="AS" />
        <keyword description="" text="AVG" />
        <keyword description="" text="ALL" />
        <keyword description="" text="ASC" />
        <keyword description="" text="BEFORE" />
        <keyword description="" text="BIT" />
        <keyword description="" text="BREADTH" />
        <keyword description="" text="BEGIN" />
        <keyword description="" text="BIT_LENGTH" />
        <keyword description="" text="BY" />
        <keyword description="" text="BETWEEN" />
        <keyword description="" text="BOOLEAN" />
        <keyword description="" text="BIGINT" />
        <keyword description="" text="BOTH" />
        <keyword description="" text="CALL" />
        <keyword description="" text="CLOSE" />
        <keyword description="" text="CORRESPONDING" />
        <keyword description="" text="CASCADE" />
        <keyword description="" text="CLUSTER" />
        <keyword description="" text="COUNT" />
        <keyword description="" text="CASCADED" />
        <keyword description="" text="COALESCE" />
        <keyword description="" text="CREATE" />
        <keyword description="" text="CASE" />
        <keyword description="" text="COLLATE" />
        <keyword description="" text="CROSS" />
        <keyword description="" text="CAST" />
        <keyword description="" text="COLLATION" />
        <keyword description="" text="CURRENT" />
        <keyword description="" text="CATALOG" />
        <keyword description="" text="COLUMN" />
        <keyword description="" text="CURRENT_DATE" />
        <keyword description="" text="CHANGE" />
        <keyword description="" text="COMMIT" />
        <keyword description="" text="CURRENT_DATETIME" />
        <keyword description="" text="CHAR" />
        <keyword description="" text="COMPLETION" />
        <keyword description="" text="CURRENT_TIME" />
        <keyword description="" text="CHARACTER" />
        <keyword description="" text="CONNECT" />
        <keyword description="" text="CURRENT_TIMESTAMP" />
        <keyword description="" text="CHARACTER_LENGTH" />
        <keyword description="" text="CONNECTION" />
        <keyword description="" text="CURRENT_USER" />
        <keyword description="" text="CHAR_LENGTH" />
        <keyword description="" text="CONSTRAINT" />
        <keyword description="" text="CURSOR" />
        <keyword description="" text="CHECK" />
        <keyword description="" text="CONSTRAINTS" />
        <keyword description="" text="CYCLE" />
        <keyword description="" text="CLASS" />
        <keyword description="" text="CONTINUE" />
        <keyword description="" text="CLASSES" />
        <keyword description="" text="CONVERT" />
        <keyword description="" text="DATA" />
        <keyword description="" text="DEFERRABLE" />
        <keyword description="" text="DICTIONARY" />
        <keyword description="" text="DATA_TYPE" />
        <keyword description="" text="DEFERRED" />
        <keyword description="" text="DIFFERENCE" />
        <keyword description="" text="DATE" />
        <keyword description="" text="DELETE" />
        <keyword description="" text="DISCONNECT" />
        <keyword description="" text="DATETIME" />
        <keyword description="" text="DEPTH" />
        <keyword description="" text="DISTINCT" />
        <keyword description="" text="DAY" />
        <keyword description="" text="DESC" />
        <keyword description="" text="DOMAIN" />
        <keyword description="" text="DEALLOCATE" />
        <keyword description="" text="DESCRIBE" />
        <keyword description="" text="DOUBLE" />
        <keyword description="" text="DECLARE" />
        <keyword description="" text="DESCRIPTOR" />
        <keyword description="" text="DROP" />
        <keyword description="" text="DEFAULT" />
        <keyword description="" text="DIAGNOSTICS" />
        <keyword description="" text="EACH" />
        <keyword description="" text="ESCAPE" />
        <keyword description="" text="EXECUTE" />
        <keyword description="" text="ELSE" />
        <keyword description="" text="EXCEPT" />
        <keyword description="" text="EXISTS" />
        <keyword description="" text="ELSEIF" />
        <keyword description="" text="EXCEPTION" />
        <keyword description="" text="EXTERNAL" />
        <keyword description="" text="END" />
        <keyword description="" text="EXCLUDE" />
        <keyword description="" text="EXTRACT" />
        <keyword description="" text="EQUALS" />
        <keyword description="" text="EXEC" />
        <keyword description="" text="FALSE" />
        <keyword description="" text="GENERAL" />
        <keyword description="" text="HAVING" />
        <keyword description="" text="FETCH" />
        <keyword description="" text="GET" />
        <keyword description="" text="HOUR" />
        <keyword description="" text="FILE" />
        <keyword description="" text="GLOBAL" />
        <keyword description="" text="FIRST" />
        <keyword description="" text="GO" />
        <keyword description="" text="FLOAT" />
        <keyword description="" text="GOTO" />
        <keyword description="" text="FOR" />
        <keyword description="" text="GRANT" />
        <keyword description="" text="FOREIGN" />
        <keyword description="" text="GROUP" />
        <keyword description="" text="FOUND" />
        <keyword description="" text="FROM" />
        <keyword description="" text="FULL" />
        <keyword description="" text="FUNCTION" />
        <keyword description="" text="IDENTITY" />
        <keyword description="" text="INHERIT" />
        <keyword description="" text="INTERSECT" />
        <keyword description="" text="IF" />
        <keyword description="" text="INITIALLY" />
        <keyword description="" text="INTERSECTION" />
        <keyword description="" text="IGNORE" />
        <keyword description="" text="INNER" />
        <keyword description="" text="INTERVAL" />
        <keyword description="" text="IMMEDIATE" />
        <keyword description="" text="INOUT" />
        <keyword description="" text="INTO" />
        <keyword description="" text="IN" />
        <keyword description="" text="INSERT" />
        <keyword description="" text="IS" />
        <keyword description="" text="INDEX" />
        <keyword description="" text="INT" />
        <keyword description="" text="ISOLATION" />
        <keyword description="" text="INDICATOR" />
        <keyword description="" text="INTEGER" />
        <keyword description="" text="JOIN" />
        <keyword description="" text="KEY" />
        <keyword description="" text="LANGUAGE" />
        <keyword description="" text="MATCH" />
        <keyword description="" text="NA" />
        <keyword description="" text="LAST" />
        <keyword description="" text="MAX" />
        <keyword description="" text="NAMES" />
        <keyword description="" text="LDB" />
        <keyword description="" text="METHOD" />
        <keyword description="" text="NATIONAL" />
        <keyword description="" text="LEADING" />
        <keyword description="" text="MILLISECOND" />
        <keyword description="" text="NATURAL" />
        <keyword description="" text="LEAVE" />
        <keyword description="" text="MIN" />
        <keyword description="" text="NCHAR" />
        <keyword description="" text="LEFT" />
        <keyword description="" text="MINUTE" />
        <keyword description="" text="NEXT" />
        <keyword description="" text="LESS" />
        <keyword description="" text="MODIFY" />
        <keyword description="" text="NO" />
        <keyword description="" text="LEVEL" />
        <keyword description="" text="MODULE" />
        <keyword description="" text="NOCYCLE" />
        <keyword description="" text="LIKE" />
        <keyword description="" text="MONETARY" />
        <keyword description="" text="NONE" />
        <keyword description="" text="LIMIT" />
        <keyword description="" text="MONTH" />
        <keyword description="" text="NOT" />
        <keyword description="" text="LIST" />
        <keyword description="" text="MULTISET" />
        <keyword description="" text="NULL" />
        <keyword description="" text="LOCAL" />
        <keyword description="" text="MULTISET_OF" />
        <keyword description="" text="NULLIF" />
        <keyword description="" text="LOCAL_TRANSACTION_ID" />
        <keyword description="" text="NUMERIC" />
        <keyword description="" text="LOOP" />
        <keyword description="" text="LOWER" />
        <keyword description="" text="OBJECT" />
        <keyword description="" text="ON_" />
        <keyword description="" text="ORDER" />
        <keyword description="" text="OCTET_LENGTH" />
        <keyword description="" text="OPEN" />
        <keyword description="" text="OTHERS" />
        <keyword description="" text="OF" />
        <keyword description="" text="OPERATION" />
        <keyword description="" text="OUT" />
        <keyword description="" text="OFF" />
        <keyword description="" text="OPERATORS" />
        <keyword description="" text="OUTER" />
        <keyword description="" text="OID" />
        <keyword description="" text="OPTIMIZATION" />
        <keyword description="" text="OUTPUT" />
        <keyword description="" text="OLD" />
        <keyword description="" text="OPTION" />
        <keyword description="" text="OVERLAPS" />
        <keyword description="" text="ONLY" />
        <keyword description="" text="OR" />
        <keyword description="" text="PARAMETERS" />
        <keyword description="" text="PREORDER" />
        <keyword description="" text="PRIVATE" />
        <keyword description="" text="PARTIAL" />
        <keyword description="" text="PREPARE" />
        <keyword description="" text="PRIVILEGES" />
        <keyword description="" text="PENDANT" />
        <keyword description="" text="PRESERVE" />
        <keyword description="" text="PROCEDURE" />
        <keyword description="" text="POSITION" />
        <keyword description="" text="PRIMARY" />
        <keyword description="" text="PROTECTED" />
        <keyword description="" text="PRECISION" />
        <keyword description="" text="PRIOR" />
        <keyword description="" text="PROXY" />
        <keyword description="" text="QUERY" />
        <keyword description="" text="READ" />
        <keyword description="" text="RENAME" />
        <keyword description="" text="ROLE" />
        <keyword description="" text="REAL" />
        <keyword description="" text="REPLACE" />
        <keyword description="" text="ROLLBACK" />
        <keyword description="" text="RECURSIVE" />
        <keyword description="" text="RESIGNAL" />
        <keyword description="" text="ROUTINE" />
        <keyword description="" text="REF" />
        <keyword description="" text="RESTRIC" />
        <keyword description="" text="ROW" />
        <keyword description="" text="REFERENCES" />
        <keyword description="" text="RETURN" />
        <keyword description="" text="ROWNUM" />
        <keyword description="" text="REFERENCING" />
        <keyword description="" text="RETURNS" />
        <keyword description="" text="ROWS" />
        <keyword description="" text="REGISTER" />
        <keyword description="" text="REVOKE" />
        <keyword description="" text="RELATIVE" />
        <keyword description="" text="RIGHT" />
        <keyword description="" text="SAVEPOINT" />
        <keyword description="" text="SHREAD" />
        <keyword description="" text="SUBSET" />
        <keyword description="" text="SCHEMA" />
        <keyword description="" text="SIBLINGS" />
        <keyword description="" text="SUBSETEQ" />
        <keyword description="" text="SCOPE" />
        <keyword description="" text="SIGNAL" />
        <keyword description="" text="SUBSTRING" />
        <keyword description="" text="SCROLL" />
        <keyword description="" text="SIMILAR" />
        <keyword description="" text="SUM" />
        <keyword description="" text="SEARCH" />
        <keyword description="" text="SIZE" />
        <keyword description="" text="SUPERCLASS" />
        <keyword description="" text="SECOND" />
        <keyword description="" text="SMALLINT" />
        <keyword description="" text="SUPERSET" />
        <keyword description="" text="SECTION" />
        <keyword description="" text="SOME" />
        <keyword description="" text="SUPERSETEQ" />
        <keyword description="" text="SELECT" />
        <keyword description="" text="SQL" />
        <keyword description="" text="SYSDATE" />
        <keyword description="" text="SENSITIVE" />
        <keyword description="" text="SQLCODE" />
        <keyword description="" text="SYSDATETIME" />
        <keyword description="" text="SEQUENCE" />
        <keyword description="" text="SQLERROR" />
        <keyword description="" text="SYSTEM_USER" />
        <keyword description="" text="SEQUENCE_OF" />
        <keyword description="" text="SQLEXCEPTION" />
        <keyword description="" text="SYSTIME" />
        <keyword description="" text="SERIALIZABLE" />
        <keyword description="" text="SQLSTATE" />
        <keyword description="" text="SYS_DATE" />
        <keyword description="" text="SESSION" />
        <keyword description="" text="SQLWARNING" />
        <keyword description="" text="SYS_DATETIME" />
        <keyword description="" text="SESSION_USER" />
        <keyword description="" text="STATISTICS" />
        <keyword description="" text="SYS_TIME" />
        <keyword description="" text="SET" />
        <keyword description="" text="STRING" />
        <keyword description="" text="SYS_TIMESTAMP" />
        <keyword description="" text="SETEQ" />
        <keyword description="" text="STRUCTURE" />
        <keyword description="" text="SYS_USER" />
        <keyword description="" text="SET_OF" />
        <keyword description="" text="SUBCLASS" />
        <keyword description="" text="TABLE" />
        <keyword description="" text="TIMESTAMP" />
        <keyword description="" text="TRANSLATE" />
        <keyword description="" text="TEMPORARY" />
        <keyword description="" text="TIMEZONE_HOUR" />
        <keyword description="" text="TRANSLATION" />
        <keyword description="" text="TEST" />
        <keyword description="" text="TIMEZONE_MINUTE" />
        <keyword description="" text="TRIGGER" />
        <keyword description="" text="THEN" />
        <keyword description="" text="TO" />
        <keyword description="" text="TRIM" />
        <keyword description="" text="THERE" />
        <keyword description="" text="TRAILING" />
        <keyword description="" text="TRUE" />
        <keyword description="" text="TIME" />
        <keyword description="" text="TRANSACTION" />
        <keyword description="" text="TYPE" />
        <keyword description="" text="UNDER" />
        <keyword description="" text="VALUE" />
        <keyword description="" text="WAIT" />
        <keyword description="" text="UNION" />
        <keyword description="" text="VALUES" />
        <keyword description="" text="WHEN" />
        <keyword description="" text="UNIQUE" />
        <keyword description="" text="VARCHAR" />
        <keyword description="" text="WHENEVER" />
        <keyword description="" text="UNKNOWN" />
        <keyword description="" text="VARIABLE" />
        <keyword description="" text="WHERE" />
        <keyword description="" text="UPDATE" />
        <keyword description="" text="VARYING" />
        <keyword description="" text="WHILE" />
        <keyword description="" text="UPPER" />
        <keyword description="" text="VCLASS" />
        <keyword description="" text="WITH" />
        <keyword description="" text="USAGE" />
        <keyword description="" text="VIEW" />
        <keyword description="" text="WITHOUT" />
        <keyword description="" text="USE" />
        <keyword description="" text="VIRTUAL" />
        <keyword description="" text="WORK" />
        <keyword description="" text="USER" />
        <keyword description="" text="VISIBLE" />
        <keyword description="" text="WRITE" />
        <keyword description="" text="USING" />
        <keyword description="" text="UTIME" />
        <keyword description="" text="YEAR" />
        <keyword description="" text="ZONE" />
        <keyword description="" text="" />      
      </keywords>
      <trigger-defs>
        <field role="event" value="INSERT" />
        <field role="event" value="STATEMENT INSERT" />
        <field role="event" value="UPDATE" />
        <field role="event" value="STATEMENT UPDATE" />
        <field role="event" value="DELETE" />
        <field role="event" value="STATEMENT DELETE" />
        <field role="event" value="ROLLBACK" />
        <field role="event" value="COMMIT" />
        <field role="time" value="BEFORE" />
        <field role="time" value="AFTER" />
        <field role="time" value="DEFERRED" />
      </trigger-defs>    
    </database>
  </databases>
</repository>
  
